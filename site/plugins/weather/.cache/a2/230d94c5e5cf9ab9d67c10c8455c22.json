{"id":"../node_modules/asn1.js/lib/asn1/decoders/pem.js","dependencies":[{"name":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/package.json","includedInParent":true,"mtime":1582912700200},{"name":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/asn1.js/package.json","includedInParent":true,"mtime":1582905740625},{"name":"inherits","loc":{"line":1,"column":23},"parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/asn1.js/lib/asn1/decoders/pem.js","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/inherits/inherits_browser.js"},{"name":"buffer","loc":{"line":2,"column":21},"parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/asn1.js/lib/asn1/decoders/pem.js","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/buffer/index.js"},{"name":"./der","loc":{"line":4,"column":25},"parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/asn1.js/lib/asn1/decoders/pem.js","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/asn1.js/lib/asn1/decoders/der.js"}],"generated":{"js":"\nvar inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n"},"sourceMaps":null,"error":null,"hash":"67fbcc98a3c0f25cb0c2eddf80f38742","cacheData":{"env":{}}}