{"id":"../node_modules/forecast.io/index.js","dependencies":[{"name":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/package.json","includedInParent":true,"mtime":1582912700200},{"name":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/forecast.io/package.json","includedInParent":true,"mtime":1582912699970},{"name":"debug","loc":{"line":1,"column":18},"parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/forecast.io/index.js","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/forecast.io/node_modules/debug/debug.js"},{"name":"request","loc":{"line":2,"column":22},"parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/forecast.io/index.js","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/request/index.js"},{"name":"util","loc":{"line":3,"column":19},"parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/forecast.io/index.js","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/util/util.js"},{"name":"querystring","loc":{"line":4,"column":17},"parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/forecast.io/index.js","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/querystring-es3/index.js"}],"generated":{"js":"var log = require('debug')('forecast.io'),\n    request = require('request'),\n    util = require('util'),\n    qs = require('querystring');\n\nfunction ForecastError (errors) {\n  Error.captureStackTrace(this, ForecastError);\n  this.errors = errors;\n}\n\nutil.inherits(ForecastError, Error);\n\nForecastError.prototype.toString = function toString (){\n  return \"ForecastError: \" + this.errors;\n}\n\nfunction Forecast (options) {\n  if ( ! options) throw new ForecastError('APIKey must be set on Forecast options');\n  if ( ! options.APIKey) throw new ForecastError('APIKey must be set on Forecast options');\n  this.APIKey = options.APIKey;\n  this.requestTimeout = options.timeout || 2500\n  this.url = 'https://api.darksky.net/forecast/' + options.APIKey + '/';\n}\n\n\nForecast.prototype.buildUrl = function buildUrl (latitude, longitude, time, options) {\n\n if (typeof time === 'object') {\n    options = time;\n    delete time;\n }\n\n  var query = '?' + qs.stringify(options);\n  var url = this.url + latitude + ',' + longitude;\n\n  if (typeof time === 'number') {\n    url += ',' + time;\n  }\n\n  url += query;\n\n  log('get ' + url);\n  return url;\n}\n\nForecast.prototype.get = function get (latitude, longitude, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var url = this.buildUrl(latitude, longitude, options);\n\n  request.get({uri:url, timeout:this.requestTimeout}, function (err, res, data) {\n    if (err) {\n      callback(err);\n    } else if(res.headers['content-type'].indexOf('application/json') > -1) {\n      callback(null, res, JSON.parse(data));\n    } else if(res.statusCode === 200) {\n      callback(null, res, data);\n    } else {\n      callback(new ForecastError(data), res, data);\n    }\n  });\n};\n\nForecast.prototype.getAtTime = function getAtTime (latitude, longitude, time, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var url = this.buildUrl(latitude, longitude, time, options);\n\n  request.get({uri:url, timeout:this.requestTimeout}, function (err, res, data) {\n    if (err) {\n      callback(err);\n    } else {\n      data = JSON.parse(data);\n      callback(null, res, data);\n    }\n  });\n};\n\nmodule.exports = Forecast;\n"},"sourceMaps":null,"error":null,"hash":"5d4671a919faae38f4031bf15b923f77","cacheData":{"env":{}}}