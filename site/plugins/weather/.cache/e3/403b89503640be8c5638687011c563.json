{"id":"components/fields/WeatherField.vue","dependencies":[{"name":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/package.json","includedInParent":true,"mtime":1582912700200},{"name":"_css_loader","parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/src/components/fields/WeatherField.vue","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"vue-hot-reload-api","parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/src/components/fields/WeatherField.vue","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/vue-hot-reload-api/dist/index.js"},{"name":"vue","parent":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/src/components/fields/WeatherField.vue","resolved":"/Users/calumryan/Sites/kirbystarter/site/plugins/weather/node_modules/vue/dist/vue.runtime.esm.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//const DarkSky = require('forecast.io');\nvar _default = {\n  // data: {\n  //   options: {\n  //     APIKey: process.env.DARKSKY_API_KEY,\n  //     timeout: 1000\n  //   },\n  //   darksky: new DarkSky(options)\n  // },\n  data: {\n    //darkSkyAPI: process.env.VUE_APP_ARKSKY_API_KEY,\n    darkskyAPI: '',\n    weatherData: '',\n    weatherOutput: [],\n    latitude: '',\n    longitude: '',\n    weatherValue: 'jeley'\n  },\n  props: {\n    label: String,\n    value: String\n  },\n  methods: {\n    onInput: function onInput(value) {\n      this.$emit(\"input\", value);\n    },\n    success: function success(position) {\n      this.latitude = position.coords.latitude;\n      this.longitude = position.coords.longitude;\n      this.darkskyAPI = 'c4be4c938d529058ab54b0c822f6e9ab';\n      this.weatherData = \"https://api.darksky.net/forecast/\".concat(this.darkskyAPI, \"/\").concat(this.latitude, \",\").concat(this.longitude);\n      console.log(this.weatherData);\n      this.$emit(\"input\", \"fdfd\"); // fetch(this.weatherData, {\n      //   headers : {'Content-Type': 'application/json'}\n      // })\n      // .then((response) => response.json())\n      // .then((data) => {\n      //   console.log('Success:', data);\n      // })\n      // .catch((error) => {\n      //   console.error('Error:', error);\n      // });\n    },\n    error: function error() {\n      alert(\"Unable to retrieve your location\");\n    },\n    getWeather: function getWeather() {\n      if (!navigator.geolocation) {\n        alert('Geolocation is not supported by your browser');\n        return;\n      }\n\n      navigator.geolocation.getCurrentPosition(this.success, this.error);\n    }\n  }\n};\nexports.default = _default;\n        var $a01277 = exports.default || module.exports;\n      \n      if (typeof $a01277 === 'function') {\n        $a01277 = $a01277.options;\n      }\n    \n        /* template */\n        Object.assign($a01277, (function () {\n          var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"k-field\",\n        { staticClass: \"k-doi-field\", attrs: { label: _vm.label } },\n        [\n          _c(\"k-input\", {\n            attrs: {\n              theme: \"field\",\n              type: \"text\",\n              name: \"textfield\",\n              value: _vm.value\n            },\n            on: { input: _vm.onInput }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        { attrs: { type: \"button\" }, on: { click: _vm.getWeather } },\n        [_vm._v(\"Get weather\")]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n          return {\n            render: render,\n            staticRenderFns: staticRenderFns,\n            _compiled: true,\n            _scopeId: null,\n            functional: undefined\n          };\n        })());\n      \n    /* hot reload */\n    (function () {\n      if (module.hot) {\n        var api = require('vue-hot-reload-api');\n        api.install(require('vue'));\n        if (api.compatible) {\n          module.hot.accept();\n          if (!module.hot.data) {\n            api.createRecord('$a01277', $a01277);\n          } else {\n            api.reload('$a01277', $a01277);\n          }\n        }\n\n        \n        var reloadCSS = require('_css_loader');\n        module.hot.dispose(reloadCSS);\n        module.hot.accept(reloadCSS);\n      \n      }\n    })();","css":"/* optional scoped styles for the component */"},"sourceMaps":null,"error":null,"hash":"ad49de88fce71e96834da6c582e5e0f6","cacheData":{"env":{}}}